#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.24.1
#  in conjunction with Tcl version 8.6
#    Jun 30, 2019 10:19:52 PM CEST  platform: Windows NT

import sys
import os
import re

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk



try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import secondwindow_support
#global dirName



def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    secondwindow_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    secondwindow_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    
    def cancel(self):
        msg = messagebox.askyesno('Are you sure to cancel ?')
        if (msg):
            exit()
    def confirm(self):
        name = self.input.get()
        dirName = os.path.join(sys.path[0], 'dataset/', name)
        file = os.path.join(sys.path[0], 'store.txt')
        with open(file, 'w') as filetowrite:
            filetowrite.write(dirName)
            filetowrite.close()

        # Create target Directory
        os.mkdir(dirName)
        print("Directory " , dirName ,  " Created ") 
            
        exit()

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("407x346+603+248")
        top.title("New Authorization")
        top.configure(background="#d9d9d9")

        self.btnconfirm = tk.Button(top)
        self.btnconfirm.place(relx=0.614, rely=0.578, height=43, width=106)
        self.btnconfirm.configure(activebackground="#ececec")
        self.btnconfirm.configure(activeforeground="#000000")
        self.btnconfirm.configure(background="#d9d9d9")
        self.btnconfirm.configure(disabledforeground="#a3a3a3")
        self.btnconfirm.configure(foreground="#000000")
        self.btnconfirm.configure(highlightbackground="#d9d9d9")
        self.btnconfirm.configure(highlightcolor="black")
        self.btnconfirm.configure(pady="0")
        self.btnconfirm.configure(text='''Confirm''')
        self.btnconfirm.configure(width=106)
        self.btnconfirm.configure(command = self.confirm)

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.074, rely=0.318, height=46, width=132)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(cursor="fleur")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''input your name''')
        self.Label1.configure(width=132)

        self.input = tk.Entry(top)
        self.input.place(relx=0.418, rely=0.347,height=24, relwidth=0.452)
        self.input.configure(background="white")
        self.input.configure(disabledforeground="#a3a3a3")
        self.input.configure(font="TkFixedFont")
        self.input.configure(foreground="#000000")
        self.input.configure(insertbackground="black")
        self.input.configure(width=184)


        self.btncancel = tk.Button(top)
        self.btncancel.place(relx=0.197, rely=0.578, height=43, width=106)
        self.btncancel.configure(activebackground="#ececec")
        self.btncancel.configure(activeforeground="#000000")
        self.btncancel.configure(background="#d9d9d9")
        self.btncancel.configure(disabledforeground="#a3a3a3")
        self.btncancel.configure(foreground="#000000")
        self.btncancel.configure(highlightbackground="#d9d9d9")
        self.btncancel.configure(highlightcolor="black")
        self.btncancel.configure(pady="0")
        self.btncancel.configure(text='''Cancel''')
        self.btncancel.configure(width=106)
        self.btncancel.configure(command = self.cancel)

if __name__ == '__main__':
    vp_start_gui()
